// -- Functions Page -- //

// Note: Sass functions that are likely to be needed to set variable values are on their respective sheets in the util folder

@include keyframes(home-pic) {
  0% {
    margin-top: -0.5em;
    margin-bottom: 0.5em;
  }

  50% {
    margin-top: 0.5em;
    margin-bottom: -0.5em;
  }

  100% {
    margin-top: -0.5em;
    margin-bottom: 0.5em;
  }
}

@include keyframes(home-text) {
  0% {
    margin-top: 0.5em;
    margin-bottom: -0.5em;
  }

  50% {
    margin-top: -0.5em;
    margin-bottom: 0.5em;
  }

  100% {
    margin-top: 0.5em;
    margin-bottom: -0.5em;
  }
}


// Exponential power function
// Example: pow(20, 2) = 400;
// https://css-tricks.com/snippets/sass/power-function/
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}




// This is the function to pull colors out.
@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}


// For pulling specific spacing values
// Can be used for margins or padding
@function spacing($space: 'base') {
  @if map-has-key($spacing-map, $space) {
    @return map-get($spacing-map, $space);
  }
}


// For using organized z-index values
@function z-index($key) {
  @if map-has-key($z-layers, $key) {
    @return map-get($z-layers, $key);
  }

  @warn "Unknown `#{$key}` in $z-layers.";
  @return null;
}



/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  
  @return $string;
}