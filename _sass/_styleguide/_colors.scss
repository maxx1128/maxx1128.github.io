// Showing the color swatches
@mixin color-swatch-styles($palette, $color, $shade) {

  .sg-colorSwatches__swatch--#{$palette}-#{$shade} {
    @include contra-color($color);

    &::after { content: quote(inspect($color)); }
  }
}

// Container for all swatches
.sg-colorSwatches {
  display: flex;
  margin-bottom: spacing(triple);
  flex-wrap: wrap;
}

// Common styles for all different swatches
.sg-colorSwatches__swatch {
  position: relative;
  display: flex;
  padding: spacing(half);
  flex-direction: column;

  &::after {
    order: 2;

    font-size: type(font-size, small);
    font-weight: type(font-weight, bold);
  }
}

// The base color in each swatch
.sg-colorSwatches__swatch--base {
  flex: 1 1 100%;
  order: 1;

  &::after { margin-bottom: spacing(); }
}

// The other shades aside the base color
.sg-colorSwatches__swatch--shade {
  flex: 1 1 rem(150px);
  order: 2;
}

// All color swatch titles
.sg-colorSwatches__title {
  order: 1;

  font-family: type(font-family, header);
  font-weight: type(font-weight, bold);
  text-transform: capitalize;
}

// The title for base colors
.sg-colorSwatches__title--base { font-size: type(font-size, h3); }

// The title for all other color shades
.sg-colorSwatches__title--shade { font-size: type(font-size, h5); }

// Container for helper classes in each swatch
.sg-colorSwatches__helpers {
  padding-top: spacing(double);
  margin-top: auto;
  order: 3;

  font-family: type(font-family, mono);
  font-size: type(font-size, small);
}

// Generating the unique classes for displaying each color
@each $palette, $color-list in $color-map {
  @each $shade, $color in $color-list {
    @include color-swatch-styles($palette, $color, $shade);
  }
}
